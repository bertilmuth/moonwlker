plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
	id 'maven-publish'
}

group = 'org.requirementsascode'
version = '0.2'

sourceCompatibility = 16
targetCompatibility = 16

repositories {
	mavenCentral()
	maven {
		url "https://oss.sonatype.org/content/repositories/snapshots/"
	}
}

jar {
    manifest {
        attributes 'Implementation-Title': 'moonwlker',
                   'Implementation-Version': archiveVersion
	}
}

gradle.projectsEvaluated {
     tasks.withType(JavaCompile) {
         options.compilerArgs << "-parameters"
     }
}

dependencies {
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.1'
  testImplementation("org.junit.jupiter:junit-jupiter-params:5.7.0")
  testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}

task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives javadocJar, sourcesJar
}

if (project.hasProperty("signing.keyId")) {
	apply plugin: 'signing'

	signing {
	    sign configurations.archives
	}
	
	publishing {
		publications {
			mavenJava(MavenPublication) {
				pom{
					name = 'moonwlker'
					description = 'JSON without annotation.'
					url = 'http://requirementsascode.org/'
					packaging = 'jar'
					
					from components.java
					         				
      				artifact javadocJar {
						classifier "javadoc"
      				}
					
					artifact sourcesJar {
						classifier "sources"
      				}

					licenses {
						license {
							name = 'The Apache Software License, Version 2.0'
							url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
						}
					}
					
					developers {
						developer {
							id = 'bertilmuth'
							name = 'Bertil Muth'
						}
					}
					
					scm {
						url = 'scm:git@github.com:bertilmuth/requirementsascode.git'
						connection = 'scm:git@github.com:bertilmuth/requirementsascode.git'
						developerConnection = 'scm:git@github.com:bertilmuth/requirementsascode.git'
					}
				}
			}
		}
		
		repositories {
			maven {
				credentials {
					username sonatypeUsername
					password sonatypePassword
				}
				
				def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
				def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
				url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
			}
		}
	}
	
	signing {
		sign publishing.publications.mavenJava
	}
}